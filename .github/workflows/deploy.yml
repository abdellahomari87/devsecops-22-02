name: CI/CD Lambda Deploy

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install
        working-directory: serverless-api

      - name: Zip Lambda function
        run: zip -r function.zip . -x "*.git*" "*.github*" "terraform/*"
        working-directory: serverless-api

      - name: Install Terraform
        run: |
          sudo apt-get update && sudo apt-get install -y gnupg software-properties-common curl unzip
          curl -fsSL https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update && sudo apt install terraform -y

      - name: Terraform Apply (create Lambda + infra)
        working-directory: .
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_access_key }}
          AWS_REGION: us-east-1
        run: |
          terraform init
          terraform apply -auto-approve

      - name: Deploy to AWS Lambda
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_access_key }}
          AWS_REGION: us-east-1
        run: |
          aws lambda update-function-code \
            --function-name api_lambda \
            --zip-file fileb://serverless-api/function.zip \
            --region $AWS_REGION
